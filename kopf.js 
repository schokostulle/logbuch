// =============================================================
// kopf.js – Globaler Sticky Header für alle Logbuch-Seiten
// Version: 1.0 – 31.10.2025
// Beschreibung:
//   - Einheitlicher Kopfbereich (Logo, Seitentitel, Userinfo, Timer)
//   - Nutzt Supabase Auth (keine automatische Verlängerung der Session)
//   - Sessionende -> automatische Abmeldung
// =============================================================

import { supabase } from "./logbuch.js";

document.addEventListener("DOMContentLoaded", async () => {
  // -----------------------------
  // Header-Container erzeugen
  // -----------------------------
  const header = document.createElement("header");
  header.className = "global-header";
  header.innerHTML = `
    <div class="header-left">
      <div class="header-logo">⚓</div>
      <div class="header-title">
        <span class="tool-name">Logbuch</span>
        <span class="page-name">${getPageName()}</span>
      </div>
    </div>

    <div class="header-right">
      <span class="user-info">👤 <strong id="userName">Lädt...</strong></span>
      <span class="user-role">🎖️ <strong id="userRole">-</strong></span>
      <span class="session-timer">⏳ <strong id="sessionTimer">--:--</strong></span>
    </div>
  `;

  document.body.prepend(header);

  // -----------------------------
  // Elemente referenzieren
  // -----------------------------
  const userNameEl = document.getElementById("userName");
  const userRoleEl = document.getElementById("userRole");
  const timerEl = document.getElementById("sessionTimer");

  // -----------------------------
  // Supabase Session abrufen
  // -----------------------------
  const { data: sessionData, error } = await supabase.auth.getSession();
  if (error || !sessionData?.session) {
    console.warn("⚠️ Keine aktive Session – leite zu login.html um.");
    window.location.href = "login.html";
    return;
  }

  const session = sessionData.session;
  const user = session.user;

  // -----------------------------
  // Benutzer laden (users-Tabelle)
  // -----------------------------
  const { data: userInfo, error: userErr } = await supabase
    .from("users")
    .select("username, role")
    .eq("id", user.id)
    .single();

  if (userErr) {
    console.error("⚠️ Fehler beim Laden des Benutzers:", userErr);
    userNameEl.textContent = "Unbekannt";
    userRoleEl.textContent = "-";
  } else {
    userNameEl.textContent = userInfo.username || "Unbekannt";
    userRoleEl.textContent = userInfo.role || "Mitglied";
  }

  // -----------------------------
  // Sessionablauf berechnen
  // -----------------------------
  const expiresAt = new Date(session.expires_at * 1000);
  const now = new Date();
  let secondsLeft = Math.max(0, Math.floor((expiresAt - now) / 1000));

  const updateTimer = () => {
    if (secondsLeft <= 0) {
      timerEl.textContent = "Abgelaufen";
      clearInterval(interval);
      alert("⚓ Deine Sitzung ist abgelaufen. Du wirst abgemeldet.");
      supabase.auth.signOut();
      window.location.href = "login.html";
      return;
    }

    const m = Math.floor(secondsLeft / 60);
    const s = secondsLeft % 60;
    timerEl.textContent = `${m.toString().padStart(2, "0")}:${s.toString().padStart(2, "0")}`;
    secondsLeft--;
  };

  updateTimer();
  const interval = setInterval(updateTimer, 1000);

  console.log(`🕒 Session läuft bis: ${expiresAt.toLocaleString()}`);
});

// =============================================================
// Hilfsfunktion: Seitennamen aus <title> oder Dateinamen ermitteln
// =============================================================
function getPageName() {
  const title = document.title || "";
  const match = title.match(/–\s*(.+)$/); // z. B. "Logbuch – Angriffe"
  if (match) return match[1];
  const path = window.location.pathname.split("/").pop().replace(".html", "");
  return path.charAt(0).toUpperCase() + path.slice(1);
}